version: '3.1'

services:

  web:
    build: .
    container_name: web
    command: ["./start.sh"]
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - authapi
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - authapi

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - authapi

  postgresql:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER}" ]
      interval: 10s
      retries: 5
    volumes:
      - ./tests/database:/docker-entrypoint-initdb.d/
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - authapi

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASS}
    ports:
      - 5050:80
    depends_on:
      - postgresql
    networks:
      - authapi

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - authapi

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
    depends_on:
      - prometheus
    networks:
      - authapi


networks:
  authapi:
    driver: bridge
